name: Deploy Blog to GitHub Pages

# 触发条件：推送到main分支或手动触发
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# 设置权限
permissions:
  contents: read
  pages: write
  id-token: write

# 确保同时只有一个部署在运行
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建作业
  build:
    runs-on: ubuntu-latest
    
    steps:
    # 检出代码
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整历史，用于git信息
        
    # 设置Node.js环境
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    # 安装依赖
    - name: Install Dependencies
      run: |
        # 清理可能损坏的 node_modules
        rm -rf node_modules package-lock.json

        # 重新安装所有依赖
        npm install
        npm install hexo-renderer-pug --save

        # 验证关键插件安装
        echo "验证插件安装："
        ls -la node_modules/hexo-generator-index/
        ls -la node_modules/hexo-renderer-pug/ || echo "Pug renderer not found"
        
    # 生成配置文件（如果设置了环境变量）
    - name: Generate Configuration Files
      run: |
        if [ -n "${{ vars.SITE_TITLE }}" ]; then
          echo "🔧 检测到环境变量，生成自定义配置..."

          # 生成 _config.yml
          cat > _config.yml << EOF
        # Hexo Configuration
        title: ${{ vars.SITE_TITLE || 'twj0的个人博客' }}
        subtitle: ${{ vars.SITE_SUBTITLE || '记录生活，分享技术' }}
        description: ${{ vars.SITE_DESCRIPTION || '基于Hexo和AnZhiYu主题的个人博客' }}
        keywords: ${{ vars.SITE_KEYWORDS || 'blog,hexo,anzhiyu' }}
        author: ${{ vars.AUTHOR_NAME || 'twj0' }}
        language: ${{ vars.SITE_LANGUAGE || 'zh-CN' }}
        timezone: ${{ vars.TIMEZONE || 'Asia/Shanghai' }}

        # URL
        url: ${{ vars.SITE_URL || 'https://twj0.github.io/blog' }}
        root: ${{ vars.SITE_ROOT || '/blog/' }}
        permalink: :year/:month/:day/:title/
        permalink_defaults:
        pretty_urls:
          trailing_index: true
          trailing_html: true

        # Directory
        source_dir: source
        public_dir: public
        tag_dir: tags
        archive_dir: archives
        category_dir: categories
        code_dir: downloads/code
        i18n_dir: :lang
        skip_render:

        # Writing
        new_post_name: :title.md
        default_layout: post
        titlecase: false
        external_link:
          enable: true
          field: site
          exclude: ''
        filename_case: 0
        render_drafts: false
        post_asset_folder: false
        relative_link: false
        future: true
        syntax_highlighter: highlight.js
        highlight:
          line_number: true
          auto_detect: false
          tab_replace: ''
          wrap: true
          hljs: false
        prismjs:
          preprocess: true
          line_number: true
          tab_replace: ''

        # Home page setting
        index_generator:
          path: ''
          per_page: 10
          order_by: -date

        # Category & Tag
        default_category: uncategorized
        category_map:
        tag_map:

        # Metadata elements
        meta_generator: true

        # Date / Time format
        date_format: YYYY-MM-DD
        time_format: HH:mm:ss
        updated_option: 'mtime'

        # Pagination
        per_page: 10
        pagination_dir: page

        # Include / Exclude file(s)
        include:
        exclude:
        ignore:

        # Extensions
        theme: anzhiyu

        # Deployment
        deploy:
          type: git
          repo: https://github.com/twj0/blog.git
          branch: gh-pages
        EOF

          echo "✅ 使用环境变量生成了自定义配置"
        else
          echo "📋 使用现有的 _config.yml 文件"
        fi

        echo "当前配置文件内容："
        grep -E "^title:|^url:|^root:" _config.yml

    # 清理和生成
    - name: Clean and Generate
      run: |
        echo "🧹 清理旧文件..."
        npx hexo clean

        echo "🏗️ 生成静态文件..."
        npx hexo generate

        echo "📁 检查生成的文件："
        ls -la public/ | head -10

        if [ -f "public/index.html" ]; then
          echo "✅ index.html 生成成功"
          echo "📄 文件大小: $(wc -c < public/index.html) bytes"
        else
          echo "❌ index.html 生成失败"
          exit 1
        fi
        
    # 设置GitHub Pages
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    # 上传构建产物
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./public

  # 部署作业
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      with:
        timeout: 600000
        error_count: 10
        reporting_interval: 5000

    - name: Verify Deployment
      run: |
        echo "Deployment completed!"
        echo "Site URL: ${{ steps.deployment.outputs.page_url }}"
        echo "Expected URL: https://twj0.github.io/blog/"
